geom_line(size = .5) +
facet_grid(tuple ~ pdfOrCdf, scales = "free", labeller = label_bquote(rows = paste("(", list(alpha, beta), ")") == .(as.character(tuple))))
df <- cbind(pdf, cdf)
df <- df[-c(4, 5)]
names(df) <- c("x", "tuple", "PDF", "CDY")
df <- gather(df, pdfOrCdf, y, PDF, CDF)
df$pdfOrCdf <- factor(df$pdfOrCdf)
names(df) <- c("x", "tuple", "PDF", "CDF")
df <- gather(df, pdfOrCdf, y, PDF, CDF)
df$pdfOrCdf <- factor(df$pdfOrCdf)
df <- subset(df, !(df$y >=5))
ggplot(df, aes(x, y, colour = tuple)) +
geom_line(size = .5) +
facet_grid(tuple ~ pdfOrCdf, scales = "free", labeller = label_bquote(rows = paste("(", list(alpha, beta), ")") == .(as.character(tuple))))
tuple_names <- c(
y1 = eval(expression(paste("(", alphas[1], ", ", betas[1], ")", sep = ""))),
y2 = eval(expression(paste("(", alphas[2], ", ", betas[2], ")", sep = ""))),
y3 = eval(expression(paste("(", alphas[3], ", ", betas[3], ")", sep = ""))),
y4 = eval(expression(paste("(", alphas[4], ", ", betas[4], ")", sep = ""))),
y5 = eval(expression(paste("(", alphas[5], ", ", betas[5], ")", sep = "")))
)
ggplot(df, aes(x, y, colour = tuple)) +
geom_line(size = .5) +
facet_grid(tuple ~ pdfOrCdf, scales = "free", labeller = label_bquote(rows = paste("(", list(alpha, beta), ")") == .(as.character(tuple_names))))
tuple_names <- list(
y1 = eval(expression(paste("(", alphas[1], ", ", betas[1], ")", sep = ""))),
y2 = eval(expression(paste("(", alphas[2], ", ", betas[2], ")", sep = ""))),
y3 = eval(expression(paste("(", alphas[3], ", ", betas[3], ")", sep = ""))),
y4 = eval(expression(paste("(", alphas[4], ", ", betas[4], ")", sep = ""))),
y5 = eval(expression(paste("(", alphas[5], ", ", betas[5], ")", sep = "")))
)
tuple_names
ggplot(df, aes(x, y, colour = tuple)) +
geom_line(size = .5) +
facet_grid(tuple ~ pdfOrCdf, scales = "free", labeller = label_bquote(rows = paste("(", list(alpha, beta), ")") == .(as.character(tuple_names))))
cdf <- data.frame(
"x" = x,
eval(expression(paste("(", alphas[1], ", ", betas[1], ")", sep = ""))) = pbeta(x, alphas[1], betas[1]),
eval(expression(paste("(", alphas[2], ", ", betas[2], ")", sep = ""))) = pbeta(x, alphas[2], betas[2]),
cdf <- data.frame(
"x" = x,
eval(expression(paste("(", alphas[1], ", ", betas[1], ")", sep = ""))) = pbeta(x, alphas[1], betas[1]),
cdf <- data.frame(
"x" = x,
expression(paste("(", alphas[1], ", ", betas[1], ")", sep = "")) = pbeta(x, alphas[1], betas[1]),
cdf <- data.frame(
"x" = x,
as.character(eval(expression(paste("(", alphas[1], ", ", betas[1], ")", sep = "")))) = pbeta(x, alphas[1], betas[1]),
library(reshape1)
library(reshape2)
?dcast
?aggregate
faithful
library(alr4)
install.packages("alr4")
install.packages(c("DBI", "jsonlite", "lubridate", "shiny"))
library(alr4)
Transact
transaction <- Transact
transaction$a <- (transaction$t1 + transaction$t2)/2
transaction$d <- transaction$t1 - transaction$t2
lm1 <- lm(transaction$time ~ transaction$t1 + transaction$t2)
lm2 <- lm(transaction$time ~ transaction$a + transaction$d)
lm3 <- lm(transaction$time ~ transaction$t2 + transaction$d)
lm4 <- lm(transaction$time ~ transaction$t1 + transaction$t2+ transaction$a + transaction$d)
summary(lm1)
summary(lm2)
summary(lm3)
summary(lm4)
UN <- UN11
lm_UN <- lm(log(UN$fertility) ~ UN$pctUrban)
summary(lm_UN)
1.01^(-0.010163)
lm2 <- lm(log(UN$fertility) ~ log(UN$ppgdp) + UN$lifeExpF)
summary(lm2)
cakes <- cakes
cakes <- alr4::cakes
lm1 <- lm(cakes$Y ~ cakes$X1 + cakes$X2)
cakes$block
cakes
cakes$block <- as.numeric(cakes$block)
cakes
cakes <- alr4::cakes
ifelse(cakes$block=='0', 0, 1)
cakes$block
cakes$block <- ifelse(cakes$block=='0', 0, 1)
cakes$block
cakes
fuel <- alr4::fuel2001
lm1 <- lm(fuel$FuelC ~ .)
lm1 <- lm(FuelC ~ ., data = fuel)
summary(lm1)
anova(lm1)
Anova(lm1)
anova(lm1)
3.9416e+11 / 1.5873e+11
summary(lm1)
anova(lm1)
3.5301e+14+6.7563e+11+2.1698e+12+5.2927e+11+2.1795e+10+3.9416e+11
((3.5301e+14+6.7563e+11+2.1698e+12+5.2927e+11+2.1795e+10+3.9416e+11)/6)
((3.5301e+14+6.7563e+11+2.1698e+12+5.2927e+11+2.1795e+10+3.9416e+11)/6) / (6.9843e+12/44)
summary(lm1)
qf(p = 0.975, df1 = 6, df2 = 44)
qf(p = 0.95, df1 = 6, df2 = 44)
qf(p = 0.975, df1 = 6, df2 = 44)
F_stat <- ((3.5301e+14+6.7563e+11+2.1698e+12+5.2927e+11+2.1795e+10+3.9416e+11)/6) / (6.9843e+12/44)
F_lim <- qf(p = 0.975, df1 = 6, df2 = 44)
cakes <- alr4::cakes
lm1 <- lm(data=cakes, Y ~ X1 + I(X1^2) + X2 + I(X2^2) + X1*X2)
summary(lm1)
nrows(cakes)
nrow(cakes)
p <- 5
n <- nrow(cakes)
names(summary(lm1))
summary(lm1)$call
summary(lm1)$terms
anova(lm1)
names(anova(lm1))
anova(lm1)$"Sum Sq"
anova(lm1)$"Sum Sq"[-1]
anova(lm1)$"Sum Sq"
SSEf <- tail(anova(lm1)$"Sum Sq", 1)
n-p
p <- 6
SSEf <- tail(anova(lm1)$"Sum Sq", 1)
n-p
dff <- n - p
lm_a <- lm(data=cakes, Y ~ X1 + I(X1^2) + X2 + I(X2^2))
SSEr_a <- tail(anova(lm_a$"Sum Sq", 1))
SSEr_a <- tail(anova(lm_a)$"Sum Sq", 1)
Anova(lm1)
tail(car::Anova(lm1)$"Sum Sq", 2)
tail(car::Anova(lm1)$"Sum Sq", 2)[1]
MSE <- tail(car::Anova(lm1)$"Sum Sq", 1) / (n-p)
car::Anova(lm1)$"Sum Sq"
MSR_b5 <- car::Anova(lm1)$"Sum Sq"[5] / 1
F_b5 <- MSR_b5 / MSE
summary(lm1)
fuel <- alr4::fuel2001
lm1 <- lm(FuelC ~ ., data = fuel)
summary(lm1)
cakes <- alr4::cakes
lm1 <- lm(data=cakes, Y ~ X1 + I(X1^2) + X2 + I(X2^2) + X1*X2)
summary(lm1)
n <- nrow(cakes)
p <- 6
MSE <- tail(car::Anova(lm1)$"Sum Sq", 1) / (n-p)
MSR_b5 <- car::Anova(lm1)$"Sum Sq"[5] / 1
Fstar_b5 <- MSR_b5 / MSE
Flim_b5 <- qf()p=0.975, df1=1 , df2=n-p)
Flim_b5 <- qf(p=0.975, df1=1 , df2=n-p)
MSR_b2 <- car::Anova(lm1)$"Sum Sq"[2] / 1
Fstar_b2 <- MSR_b2 / MSE
Flim_b2 <- qf(p=0.975, df1=1 , df2=n-p)
SSE <- tail(car::Anova(lm1)$"Sum Sq", 1)
lm2 <- lm(data=cakes, Y ~ X2 + I(X2^2))
summary(lm2)
pr <- 3
SSEr <- tail(car::Anova(lm2)$"Sum Sq", 1)
dff <- n-pf
pf <- 6
dff <- n-pf
dfr <- n-pr
dfr-dff
SSEr <- tail(car::Anova(lm2)$"Sum Sq", 1)
Fstar_b1b2b5 <- ((SSEr - SSEf)/(dfr-dff)) / (SSEf/dff)
Flim_b1b2b5 <- qf(p=0.975, df1=3 , df2=dff)
lm2 <- lm(log(UN$fertility) ~ log(UN$ppgdp) + UN$lifeExpF)
summary(lm2)
summary(lm2)$coefficients
summary(lm2)$coefficients[1]
beta0 <- summary(lm2)$coefficients[1]
beta1 <- summary(lm2)$coefficients[2]
beta2 <- summary(lm2)$coefficients[3]
1.25^beta1
1-0.9855042
landrent <- alr4::landrent
transaction <- alr4::Transact
transaction$a <- (transaction$t1 + transaction$t2)/2
transaction$d <- transaction$t1 - transaction$t2
lm1 <- lm(transaction$time ~ transaction$t1 + transaction$t2)
transaction <- alr4::Transact
Transact
rm(list=ls())
cat("\014")
detach("package:alr4", unload=TRUE)
transaction <- Transact
transaction$a <- (transaction$t1 + transaction$t2)/2
transaction$d <- transaction$t1 - transaction$t2
lm1 <- lm(transaction$time ~ transaction$t1 + transaction$t2)
lm2 <- lm(transaction$time ~ transaction$a + transaction$d)
lm3 <- lm(transaction$time ~ transaction$t2 + transaction$d)
lm4 <- lm(transaction$time ~ transaction$t1 + transaction$t2+ transaction$a + transaction$d)
summary(lm1)
summary(lm2)
summary(lm3)
summary(lm4)
summary(lm2)
summary(lm3)
rm(list=ls())
cat("\014")
UN <- alr4::UN11
lm1 <- lm(log(UN$fertility) ~ UN$pctUrban)
summary(lm1)
UN <- alr4::UN11
lm1 <- lm(log(UN$fertility) ~ UN$pctUrban)
summary(lm1)
?alr4::UN11
1.01^(-0.010163)
1-0.9998989
0.0001011*100
lm2 <- lm(log(UN$fertility) ~ log(UN$ppgdp) + UN$lifeExpF)
summary(lm2)
beta0 <- summary(lm2)$coefficients[1]
beta1 <- summary(lm2)$coefficients[2]
beta2 <- summary(lm2)$coefficients[3]
1.25^(-0.06544)
1-0.9855036
0.0144964*100
e^1.01
exp(1.01)
plot(log(UN$fertility) ~ UN$pctUrban)
1.1^(-0.010163)
1.25^(-0.010163)
1-0.9977348
0.0022652*100
rm(list=ls())
cat("\014")
fuel <- alr4::fuel2001
lm1 <- lm(FuelC ~ ., data = fuel)
summary(lm1)
anova(lm1)
(anova1 <- anova(lm1))
anova1$"Sum Sq"
sum(anova1$"Sum Sq"[1:6])
anova1$`Sum Sq`[6]
anova1$`Sum Sq`[7]
tail(anova1$"Sum Sq", 1)
anova1$Df
F_stat <- (sum(anova1$"Sum Sq"[1:6])/sum(anova1$Df[1:6])) / (tail(anova1$"Sum Sq", 1)/tail(anova1$Df, 1))
F_lim <- qf(p = 0.975, df1 = 6, df2 = 44)
F_stat
cakes <- alr4::cakes
lm1 <- lm(data=cakes, Y ~ X1 + I(X1^2) + X2 + I(X2^2) + X1*X2)
summary(lm1)
n <- nrow(cakes)
pf <- 6
dff <- n-pf
SSEf <- tail(car::Anova(lm1)$"Sum Sq", 1)
MSEf <- SSEf / dff
SSEf
MSEf
MSR_b5 <- car::Anova(lm1)$"Sum Sq"[5] / 1
Fstar_b5 <- MSR_b5 / MSEf
Flim_b5 <- qf(p=0.975, df1=1 , df2=dff)
F_stat <- (sum(anova1$"Sum Sq"[1:6])/sum(anova1$Df[1:6])) / (tail(anova1$"Sum Sq", 1)/tail(anova1$Df, 1))
rm(list=ls())
cat("\014")
cakes <- alr4::cakes
lm1 <- lm(data=cakes, Y ~ X1 + I(X1^2) + X2 + I(X2^2) + X1*X2)
summary(lm1)
n <- nrow(cakes)
pf <- 6
dff <- n-pf
SSEf <- tail(car::Anova(lm1)$"Sum Sq", 1)
MSEf <- SSEf / dff
# a
MSR_b5 <- car::Anova(lm1)$"Sum Sq"[5] / 1
Fstar_b5 <- MSR_b5 / MSEf
Flim_b5 <- qf(p=0.975, df1=1 , df2=dff)
MSR_b5
Fstar_b5
Flim_b5
dff
MSR_b2 <- car::Anova(lm1)$"Sum Sq"[2] / 1
Fstar_b2 <- MSR_b2 / MSEf
Flim_b2 <- qf(p=0.975, df1=1 , df2=dff)
MSR_b2
Fstar_b2
Flim_b2
lm2 <- lm(data=cakes, Y ~ X2 + I(X2^2))
summary(lm2)
pr <- 3
dfr <- n-pr
SSEr <- tail(car::Anova(lm2)$"Sum Sq", 1)
Fstar_b1b2b5 <- ((SSEr - SSEf)/(dfr-dff)) / (SSEf/dff)
Flim_b1b2b5 <- qf(p=0.975, df1=3 , df2=dff)
SSEr
dfr
n-p-3
n-pf-3
n-(pf-3)
Fstar_b1b2b5 <- ((SSEr - SSEf)/(dfr-dff)) / (SSEf/dff)
Fstar_b1b2b5
Flim_b1b2b5 <- qf(p=0.975, df1=3 , df2=dff)
Flim_b1b2b5
dfr-dff
landrent <- alr4::landrent
rm(list=ls())
cat("\014")
landrent <- alr4::landrent
lm1 <- lm(data=landrent, Y ~ X1 + X2 + X3 + X4)
summary(lm1)
plot(landrent)
plot(landrent$Y~landrent$X2)
summary(lm(landrent$Y~landrent$X2))
plot(landrent$Y~landrent$X1)
plot(landrent$Y~landrent$X3)
plot(landrent$Y~landrent$X4)
plot(landrent$Y~landrent$X3)
plot(landrent$Y~log(landrent$X3))
summary(lm(landrent$Y~log(landrent$X3)))
summary(lm(landrent$Y~landrent$X1+log(landrent$X3)))
summary(lm(landrent$Y~landrent$X1+landrent$X2+log(landrent$X3)))
pairs(landrent)
cor(landrent)
plot(landrent)
pairs(landrent)
summary(lm(data=landrent, Y ~ X1 + X2 + X3))
summary(lm(data=landrent, Y ~ X1 + X2 + X4))
lm_f <- lm(data=landrent, Y ~ X1 + X2)
summary(lm_f)
scatterplot(landrent)
scatterplot(landrent$X1, landrent$Y)
scatterplot(landrent$Y~landrent$X1)
scatterplot(landrent$Y~landrent$X1+landrent$X2)
residualPlot(lm_f)
plot(lm_f$residuals, xlab="Sequence", ylab="Residuals",
main="Sequence Plot")
par(mfrow=c(1,2))
plot(stdres(lm_f), xlab="", ylab="",
main="Standardized Residual Plot")
library(MASS)
detach(MASS)
detach("MASS")
detach("package:MASS", unload=TRUE)
par(mfrow=c(1,2))
plot(MASS::stdres(lm_f), xlab="", ylab="",
main="Standardized Residual Plot")
abline(h=0)
plot(MASS::studres(lm_f), xlab="", ylab="",
main="Studentized Residual Plot")
abline(h=0)
par(mfrow=c(1,1))
residplot <- function(fit, nbreaks=10) {
z <- rstudent(fit)
hist(z, breaks=nbreaks, freq=FALSE,
xlab="Studentized Residual",
main="Distribution of Errors")
rug(jitter(z), col="brown")
curve(dnorm(x, mean=mean(z), sd=sd(z)),
add=TRUE, col="blue", lwd=2)
lines(density(z)$x, density(z)$y,
col="red", lwd=2, lty=2)
legend("topright",
legend = c( "Normal Curve", "Kernel Density Curve"),
lty=1:2, col=c("blue","red"), cex=.7)
}
residplot(lm_f)
shapiro.test(lm_UN$residuals)
shapiro.test(lm_f$residuals)
qqPlot(residuals(lm_f), main="landrent: Normal QQ-Plot", xlab="", ylab="")
residualPlot(lm_f)
plot(lm_f$residuals, xlab="Sequence", ylab="Residuals",
main="Sequence Plot")
par(mfrow=c(1,2))
plot(MASS::stdres(lm_f), xlab="", ylab="",
main="Standardized Residual Plot")
abline(h=0)
plot(MASS::studres(lm_f), xlab="", ylab="",
main="Studentized Residual Plot")
abline(h=0)
plot(landrent)
par(mfrow=c(1,2))
plot(MASS::stdres(lm_f), xlab="Standardized Residual", ylab="Sequence",
main="Standardized Residual Plot")
abline(h=0)
plot(MASS::studres(lm_f), xlab="Studentized Residual", ylab="Sequence",
main="Studentized Residual Plot")
abline(h=0)
par(mfrow=c(1,1))
residplot <- function(fit, nbreaks=10) {
z <- rstudent(fit)
hist(z, breaks=nbreaks, freq=FALSE,
xlab="Studentized Residual",
main="Distribution of Errors")
rug(jitter(z), col="brown")
curve(dnorm(x, mean=mean(z), sd=sd(z)),
add=TRUE, col="blue", lwd=2)
lines(density(z)$x, density(z)$y,
col="red", lwd=2, lty=2)
legend("topright",
legend = c( "Normal Curve", "Kernel Density Curve"),
lty=1:2, col=c("blue","red"), cex=.7)
}
residplot(lm_f)
plot(lm_f$residuals, xlab="Sequence", ylab="Residuals",
main="Sequence Plot")
par(mfrow=c(1,2))
plot(MASS::stdres(lm_f), xlab="Standardized Residual", ylab="Sequence",
main="Standardized Residual Plot")
abline(h=0)
plot(MASS::studres(lm_f), xlab="Studentized Residual", ylab="Sequence",
main="Studentized Residual Plot")
abline(h=0)
par(mfrow=c(1,2))
plot(MASS::stdres(lm_f), xlab="Sequence", ylab="Standardized Residual",
main="Standardized Residual Plot")
abline(h=0)
plot(MASS::studres(lm_f), xlab="Sequence", ylab="Studentized Residual",
main="Studentized Residual Plot")
abline(h=0)
landrent
bptest(lm_f)
lm_test::bptest(lm_f)
lmtest::bptest(lm_f)
residualPlot(lm_f)
par(mfrow=c(1,1))
residualPlot(lm_f)
landrent$X1
median(landrent$X1)
median(landrent$X2)
landrent
landrent$Group <- factor(apply(landrent, 1, function(x){
if(x[1]<=44.56){return(0)} else{return(1)}}))
landrent
leveneTest(data=landrent, Y ~ Group, center=median)
lm3 <- lm(data=landrent, Y ~ X1 + X2 + X3)
summary(lm3)
lm4 <- lm(data=landrent, Y ~ X1 + X2 + X4)
summary(lm3)
summary(lm_f)
qqPlot(residuals(lm_f), main="landrent: Normal QQ-Plot", xlab="", ylab="")
residplot(lm_f)
leveneTest(data=landrent, Y ~ Group, center=median)
shapiro.test(lm_f$residuals)
lm3 <- lm(data=landrent, Y ~ X1 + X2 + X3)
summary(lm3)
summary(lm_f)
summary(lm3)
lm4 <- lm(data=landrent, Y ~ X1 + X2 + X4)
summary(lm3)
summary(lm34
)
summary(lm4)
summary(lm1)
summary(lm(data=landrent, Y ~ X1 + X3)
)
rm(list=ls())
cat("\014")
rateprof <- alr4::Rateprof
detach("package:car", unload=TRUE)
transaction <- Transact
transaction <- alr4::Transact
normal <- rnorm(5000, 0, 1) + c(1, 0, 2, 0, 1)
plot(normal)
shapiro.test(normal)
normal <- rnorm(5000, 0, 1) + c(1, 0, 2, 0, 1)
shapiro.test(normal)
non_normal <- runif(10)
non_normal
dist(non_normal)
hist(non_normal)
shapiro.test(non_normal)
non_normal <- runif(10)
shapiro.test(non_normal)
hist(non_normal)
non_normal <- replicate(1000, shapiro.test(runif(10))$p.value)
rowMeans(non_normal<0.05)
non_normal<0.05
sum(non_normal<0.05)
sum(non_normal<0.05)/1000
non_normal <- replicate(5000, shapiro.test(runif(10))$p.value)
sum(non_normal<0.05)/1000
sum(non_normal<0.05)/5000
non_normal <- replicate(5000, shapiro.test(runif(10))$p.value)
sum(non_normal<0.05)/length(non_normal)
normal <- rnorm(5000, 0, 1) + runif(5000, 1, 2)
normal <- replicate(rnorm(5000, 0, 1))# + runif(5000, 1, 2)
normal <- replicate(5000, rnorm(5000, 0, 1))# + runif(5000, 1, 2)
normal <- replicate(5000, shapiro.test(rnorm(5000, 0, 1))$p.value)# + runif(5000, 1, 2)
sum(normal<0.05)/length(normal)
sum(non_normal<0.05)/length(non_normal) * 100
sum(normal<0.05)/length(normal) * 100
sum(non_normal>0.05)/length(non_normal) * 100 # percent of times non-normal data is considered normal
sum(normal<0.05)/length(normal) * 100 # percent of times normal data is considered non-normal
install.packages("leaps")
install.packages("xlsx")
install.packages("rJava")
install.packages("xlsx")
library(xlsx)
library(rJava)
install.packages("rJava")
library(xlsx)
library(rJava)
Sys.getenv("JAVA_HOME")
setwd("~/Documents/msan601/CS1")
library(xlsx)
library(car)
library(lmtest)
df <- read.xlsx("UV6486-XLS-ENG.xlsx", sheetIndex = 2, endRow = 121, header = T, colIndex = c(2,3,4))
df <- df[c(2,1,3)]
hist(df$Inside.Outside.Footprint)
hist(ifelse(df$Inside.Outside.Footprint=="Inside", 1, 0)
)
sum(ifelse(df$Inside.Outside.Footprint=="Inside", 1, 0))
sum(ifelse(df$Inside.Outside.Footprint=="Inside", 1, 0)==TRUE)
sum(ifelse(df$Inside.Outside.Footprint=="Inside", 1, 0)==F)
lm2 <- lm(log(df$Households.with.Account)~log(df$Total.Households.in.Area)+df$Inside.Outside.Footprint)
shapiro.test(summary(lm2)$residuals)
hist(summary(lm2)$residuals)
