geom_point() +
theme(axis.text.x = element_blank()))
summaries <- list()
for(i in 1:length(subsets)){
print(i)
df_tmp <- subsets[[i]]
include_Sales.Rep <- if(length(unique(df_tmp$Sales.Rep))==1){F}else{T}
include_Endcap <- if(length(unique(df_tmp$Endcap))==1){F}else{T}
include_Demo <- if(length(unique(df_tmp$Demo))==1){F}else{T}
include_Demo1.3 <- if(length(unique(df_tmp$Demo1.3))==1){F}else{T}
include_Demo4.5 <- if(length(unique(df_tmp$Demo4.5))==1){F}else{T}
include_Natural <- F # don't need Natural, insignificant for all
include_Fitness <- F # don't need Fitness, insignificant for all
df_tmp <- df_tmp[,
c(T,
F, # don't need region again
T,
include_Sales.Rep,
include_Endcap,
include_Demo,
include_Demo1.3,
include_Demo4.5,
include_Natural,
include_Fitness)]
lm_tmp <- lm(data=df_tmp, Units.Sold~.-Date-Store)
summary(lm_tmp)
summaries[[i]] <- summary(lm_tmp)
print(ggplot(df_tmp, aes(Date, Units.Sold, colour = Store)) +
geom_point())
readline()
}
for(i in 1:length(subsets)){
print(i)
df_tmp <- subsets[[i]]
include_Sales.Rep <- if(length(unique(df_tmp$Sales.Rep))==1){F}else{T}
include_Endcap <- if(length(unique(df_tmp$Endcap))==1){F}else{T}
include_Demo <- if(length(unique(df_tmp$Demo))==1){F}else{T}
include_Demo1.3 <- if(length(unique(df_tmp$Demo1.3))==1){F}else{T}
include_Demo4.5 <- if(length(unique(df_tmp$Demo4.5))==1){F}else{T}
include_Natural <- F # don't need Natural, insignificant for all
include_Fitness <- F # don't need Fitness, insignificant for all
df_tmp <- df_tmp[,
c(T,
F, # don't need region again
T,
include_Sales.Rep,
include_Endcap,
include_Demo,
include_Demo1.3,
include_Demo4.5,
include_Natural,
include_Fitness)]
lm_tmp <- lm(data=df_tmp, Units.Sold~.-Date-Store)
summary(lm_tmp)
summaries[[i]] <- summary(lm_tmp)
print(ggplot(df_tmp, aes(Date, Units.Sold, colour = Store)) +
geom_point())
readline()
}
names(df$Region)
levels(df$Region)
levels(df$Region)[1]
summaries <- list()
for(i in 1:length(subsets)){
print(i)
df_tmp <- subsets[[i]]
region <- levels(df_tmp$Region)[1]
include_Sales.Rep <- if(length(unique(df_tmp$Sales.Rep))==1){F}else{T}
include_Endcap <- if(length(unique(df_tmp$Endcap))==1){F}else{T}
include_Demo <- if(length(unique(df_tmp$Demo))==1){F}else{T}
include_Demo1.3 <- if(length(unique(df_tmp$Demo1.3))==1){F}else{T}
include_Demo4.5 <- if(length(unique(df_tmp$Demo4.5))==1){F}else{T}
include_Natural <- F # don't need Natural, insignificant for all
include_Fitness <- F # don't need Fitness, insignificant for all
df_tmp <- df_tmp[,
c(T,
F, # don't need region again
T,
include_Sales.Rep,
include_Endcap,
include_Demo,
include_Demo1.3,
include_Demo4.5,
include_Natural,
include_Fitness)]
lm_tmp <- lm(data=df_tmp, Units.Sold~.-Date-Store)
summary(lm_tmp)
summaries[[i]] <- summary(lm_tmp)
print(ggplot(df_tmp, aes(Date, Units.Sold, colour = Store)) +
geom_point() +
ggtitle(paste("Region: ", region, sep = "")))
readline()
}
summaries <- list()
for(i in 1:length(subsets)){
print(i)
df_tmp <- subsets[[i]]
region <- levels(df_tmp$Region)[i]
include_Sales.Rep <- if(length(unique(df_tmp$Sales.Rep))==1){F}else{T}
include_Endcap <- if(length(unique(df_tmp$Endcap))==1){F}else{T}
include_Demo <- if(length(unique(df_tmp$Demo))==1){F}else{T}
include_Demo1.3 <- if(length(unique(df_tmp$Demo1.3))==1){F}else{T}
include_Demo4.5 <- if(length(unique(df_tmp$Demo4.5))==1){F}else{T}
include_Natural <- F # don't need Natural, insignificant for all
include_Fitness <- F # don't need Fitness, insignificant for all
df_tmp <- df_tmp[,
c(T,
F, # don't need region again
T,
include_Sales.Rep,
include_Endcap,
include_Demo,
include_Demo1.3,
include_Demo4.5,
include_Natural,
include_Fitness)]
lm_tmp <- lm(data=df_tmp, Units.Sold~.-Date-Store)
summary(lm_tmp)
summaries[[i]] <- summary(lm_tmp)
print(ggplot(df_tmp, aes(Date, Units.Sold, colour = Store)) +
geom_point() +
ggtitle(paste("Region: ", region, sep = "")))
readline()
}
summaries
summaries <- list()
for(i in 1:length(subsets)){
print(i)
df_tmp <- subsets[[i]]
region <- levels(df_tmp$Region)[i]
include_Sales.Rep <- if(length(unique(df_tmp$Sales.Rep))==1){F}else{T}
include_Endcap <- if(length(unique(df_tmp$Endcap))==1){F}else{T}
include_Demo <- if(length(unique(df_tmp$Demo))==1){F}else{T}
include_Demo1.3 <- if(length(unique(df_tmp$Demo1.3))==1){F}else{T}
include_Demo4.5 <- if(length(unique(df_tmp$Demo4.5))==1){F}else{T}
include_Natural <- F # don't need Natural, insignificant for all
include_Fitness <- F # don't need Fitness, insignificant for all
df_tmp <- df_tmp[,
c(T,
F, # don't need region again
T,
include_Sales.Rep,
include_Endcap,
include_Demo,
include_Demo1.3,
include_Demo4.5,
include_Natural,
include_Fitness)]
lm_tmp <- lm(data=df_tmp, Units.Sold~.-Date-Store)
summary(lm_tmp)
summaries[[i]] <- summary(lm_tmp)
print(ggplot(df_tmp, aes(Date, Units.Sold, colour = Store)) +
geom_line() +
ggtitle(paste("Region: ", region, sep = "")))
readline()
}
sum(unique(df$Store))
unique(df$Store)
unique(df$Region)
table(df$Region)
df$Region[df$Region=="FL"]
df[df$Region=="FL"]
df$Store[df$Region=="FL"]
table(df$Region)
209/11
table(df$Region/11)
209/11
table(df$Region)
table(df$Region)[2,]
table(df$Region)
88/11
209/11
143/11
176/11
print(ggplot(df_tmp, aes(Date, Units.Sold, colour = Store)) +
geom_line() +
ggtitle(paste("Region: ", region, sep = "")) +
theme(axis.text = element_text(size=12),
strip.text.y = element_text(size = 18),
title = element_text(size = 20)))
print(ggplot(df_tmp, aes(Date, Units.Sold, colour = Store)) +
geom_line() +
ggtitle(paste("Region: ", region, sep = "")) +
theme(axis.text = element_text(size=14),
strip.text.y = element_text(size = 14),
title = element_text(size = 16)))
print(ggplot(df_tmp, aes(Date, Units.Sold, colour = Store)) +
geom_line() +
ggtitle(paste("Region: ", region, sep = "")) +
theme(axis.text = element_text(size=14),
strip.text.y = element_text(size = 14),
title = element_text(size = 16),
legend.text = element_text(size=14)))
print(ggplot(df_tmp, aes(Date, Units.Sold, colour = Store)) +
geom_line() +
ggtitle(paste("Region: ", region, sep = "")) +
theme(axis.text = element_text(size=12),
strip.text.y = element_text(size = 12),
title = element_text(14),
legend.text = element_text(size=12)))
print(ggplot(df_tmp, aes(Date, Units.Sold, colour = Store)) +
geom_line() +
ggtitle(paste("Region: ", region, sep = "")) +
theme(axis.text = element_text(size=12),
title = element_text(14),
legend.text = element_text(size=12)))
readline()
print(ggplot(df_tmp, aes(Date, Units.Sold, colour = Store)) +
geom_line() +
ggtitle(paste("Region: ", region, sep = "")) +
theme(axis.text = element_text(size=12),
title = element_text(14),
legend.text = element_text(size=13)))
print(ggplot(df_tmp, aes(Date, Units.Sold, colour = Store)) +
geom_line() +
ggtitle(paste("Region: ", region, sep = "")) +
theme(axis.text = element_text(size=13),
title = element_text(15),
legend.text = element_text(size=13)))
print(ggplot(df_tmp, aes(Date, Units.Sold, colour = Store)) +
geom_line() +
ggtitle(paste("Region: ", region, sep = "")) +
theme(axis.text = element_text(size=13),
title = element_text(15),
legend.text = element_text(size=13)) +
xlab("\n Date") +
ylab("Units Sold\n") + )
print(ggplot(df_tmp, aes(Date, Units.Sold, colour = Store)) +
geom_line() +
ggtitle(paste("Region: ", region, sep = "")) +
theme(axis.text = element_text(size=13),
title = element_text(15),
legend.text = element_text(size=13)) +
xlab("\n Date") +
ylab("Units Sold\n"))
summaries <- list()
for(i in 1:length(subsets)){
print(i)
df_tmp <- subsets[[i]]
region <- levels(df_tmp$Region)[i]
include_Sales.Rep <- if(length(unique(df_tmp$Sales.Rep))==1){F}else{T}
include_Endcap <- if(length(unique(df_tmp$Endcap))==1){F}else{T}
include_Demo <- if(length(unique(df_tmp$Demo))==1){F}else{T}
include_Demo1.3 <- if(length(unique(df_tmp$Demo1.3))==1){F}else{T}
include_Demo4.5 <- if(length(unique(df_tmp$Demo4.5))==1){F}else{T}
include_Natural <- F # don't need Natural, insignificant for all
include_Fitness <- F # don't need Fitness, insignificant for all
df_tmp <- df_tmp[,
c(T,
F, # don't need region again
T,
include_Sales.Rep,
include_Endcap,
include_Demo,
include_Demo1.3,
include_Demo4.5,
include_Natural,
include_Fitness)]
lm_tmp <- lm(data=df_tmp, Units.Sold~.-Date-Store)
summary(lm_tmp)
summaries[[i]] <- summary(lm_tmp)
print(ggplot(df_tmp, aes(Date, Units.Sold, colour = Store)) +
geom_line() +
ggtitle(paste("Region: ", region, sep = "")) +
theme(axis.text = element_text(size=13),
title = element_text(15),
legend.text = element_text(size=13)) +
xlab("\n Date") +
ylab("Units Sold\n"))
}
df$Store <- sub("(", "(\n ", df$Store)
df$Store <- sub("\(", "\(\n ", df$Store)
df$Store <- sub("\\(", "\\(\n ", df$Store)
summaries <- list()
for(i in 1:length(subsets)){
print(i)
df_tmp <- subsets[[i]]
region <- levels(df_tmp$Region)[i]
include_Sales.Rep <- if(length(unique(df_tmp$Sales.Rep))==1){F}else{T}
include_Endcap <- if(length(unique(df_tmp$Endcap))==1){F}else{T}
include_Demo <- if(length(unique(df_tmp$Demo))==1){F}else{T}
include_Demo1.3 <- if(length(unique(df_tmp$Demo1.3))==1){F}else{T}
include_Demo4.5 <- if(length(unique(df_tmp$Demo4.5))==1){F}else{T}
include_Natural <- F # don't need Natural, insignificant for all
include_Fitness <- F # don't need Fitness, insignificant for all
df_tmp <- df_tmp[,
c(T,
F, # don't need region again
T,
include_Sales.Rep,
include_Endcap,
include_Demo,
include_Demo1.3,
include_Demo4.5,
include_Natural,
include_Fitness)]
lm_tmp <- lm(data=df_tmp, Units.Sold~.-Date-Store)
summary(lm_tmp)
summaries[[i]] <- summary(lm_tmp)
print(ggplot(df_tmp, aes(Date, Units.Sold, colour = Store)) +
geom_line() +
ggtitle(paste("Region: ", region, sep = "")) +
theme(axis.text = element_text(size=13),
title = element_text(15),
legend.text = element_text(size=13)) +
xlab("\n Date") +
ylab("Units Sold\n"))
}
df$Store
df <- read.csv("goodBellyData.csv", header=T, stringsAsFactors = F)
df <- df[,1:12]
df$Date <- as.Date(df$Date, format = "%m/%d/%y")
df$Region[is.na(df$Region)] <- "ME"
df$Region <- as.factor(df$Region)
df$Store <- as.factor(df$Store)
df$Store <- sub("\\(", "\n \\(", df$Store)
df$Store
subsets <- split(df, df$Region, drop=TRUE)
summaries <- list()
for(i in 1:length(subsets)){
print(i)
df_tmp <- subsets[[i]]
region <- levels(df_tmp$Region)[i]
include_Sales.Rep <- if(length(unique(df_tmp$Sales.Rep))==1){F}else{T}
include_Endcap <- if(length(unique(df_tmp$Endcap))==1){F}else{T}
include_Demo <- if(length(unique(df_tmp$Demo))==1){F}else{T}
include_Demo1.3 <- if(length(unique(df_tmp$Demo1.3))==1){F}else{T}
include_Demo4.5 <- if(length(unique(df_tmp$Demo4.5))==1){F}else{T}
include_Natural <- F # don't need Natural, insignificant for all
include_Fitness <- F # don't need Fitness, insignificant for all
df_tmp <- df_tmp[,
c(T,
F, # don't need region again
T,
include_Sales.Rep,
include_Endcap,
include_Demo,
include_Demo1.3,
include_Demo4.5,
include_Natural,
include_Fitness)]
lm_tmp <- lm(data=df_tmp, Units.Sold~.-Date-Store)
summary(lm_tmp)
summaries[[i]] <- summary(lm_tmp)
print(ggplot(df_tmp, aes(Date, Units.Sold, colour = Store)) +
geom_line() +
ggtitle(paste("Region: ", region, sep = "")) +
theme(axis.text = element_text(size=13),
title = element_text(15),
legend.text = element_text(size=13)) +
xlab("\n Date") +
ylab("Units Sold\n"))
}
df$Store <- sub("\\(", "\n\\(", df$Store)
subsets <- split(df, df$Region, drop=TRUE)
summaries <- list()
for(i in 1:length(subsets)){
print(i)
df_tmp <- subsets[[i]]
region <- levels(df_tmp$Region)[i]
include_Sales.Rep <- if(length(unique(df_tmp$Sales.Rep))==1){F}else{T}
include_Endcap <- if(length(unique(df_tmp$Endcap))==1){F}else{T}
include_Demo <- if(length(unique(df_tmp$Demo))==1){F}else{T}
include_Demo1.3 <- if(length(unique(df_tmp$Demo1.3))==1){F}else{T}
include_Demo4.5 <- if(length(unique(df_tmp$Demo4.5))==1){F}else{T}
include_Natural <- F # don't need Natural, insignificant for all
include_Fitness <- F # don't need Fitness, insignificant for all
df_tmp <- df_tmp[,
c(T,
F, # don't need region again
T,
include_Sales.Rep,
include_Endcap,
include_Demo,
include_Demo1.3,
include_Demo4.5,
include_Natural,
include_Fitness)]
lm_tmp <- lm(data=df_tmp, Units.Sold~.-Date-Store)
summary(lm_tmp)
summaries[[i]] <- summary(lm_tmp)
print(ggplot(df_tmp, aes(Date, Units.Sold, colour = Store)) +
geom_line() +
ggtitle(paste("Region: ", region, sep = "")) +
theme(axis.text = element_text(size=13),
title = element_text(15),
legend.text = element_text(size=13)) +
xlab("\n Date") +
ylab("Units Sold\n"))
}
summaries <- list()
for(i in 1:length(subsets)){
print(i)
df_tmp <- subsets[[i]]
region <- levels(df_tmp$Region)[i]
include_Sales.Rep <- if(length(unique(df_tmp$Sales.Rep))==1){F}else{T}
include_Endcap <- if(length(unique(df_tmp$Endcap))==1){F}else{T}
include_Demo <- if(length(unique(df_tmp$Demo))==1){F}else{T}
include_Demo1.3 <- if(length(unique(df_tmp$Demo1.3))==1){F}else{T}
include_Demo4.5 <- if(length(unique(df_tmp$Demo4.5))==1){F}else{T}
include_Natural <- F # don't need Natural, insignificant for all
include_Fitness <- F # don't need Fitness, insignificant for all
df_tmp <- df_tmp[,
c(T,
F, # don't need region again
T,
include_Sales.Rep,
include_Endcap,
include_Demo,
include_Demo1.3,
include_Demo4.5,
include_Natural,
include_Fitness)]
lm_tmp <- lm(data=df_tmp, Units.Sold~.-Date-Store)
summary(lm_tmp)
summaries[[i]] <- summary(lm_tmp)
print(ggplot(df_tmp, aes(Date, Units.Sold, colour = Store)) +
geom_line() +
ggtitle(paste("Region: ", region, sep = "")) +
theme(axis.text = element_text(size=13),
title = element_text(15),
legend.text = element_text(size=13)) +
xlab("\n Date") +
ylab("Units Sold\n"))
ggsave(paste("salesPerStore_", region, sep=""))
}
g <- (ggplot(df_tmp, aes(Date, Units.Sold, colour = Store)) +
geom_line() +
ggtitle(paste("Region: ", region, sep = "")) +
theme(axis.text = element_text(size=13),
title = element_text(15),
legend.text = element_text(size=13)) +
xlab("\n Date") +
ylab("Units Sold\n"))
ggsave(paste("salesPerStore_", region, sep=""), g)
ggplot(df_tmp, aes(Date, Units.Sold, colour = Store)) +
geom_line() +
ggtitle(paste("Region: ", region, sep = "")) +
theme(axis.text = element_text(size=13),
title = element_text(15),
legend.text = element_text(size=13)) +
xlab("\n Date") +
ylab("Units Sold\n")
ggsave(paste("salesPerStore_", region, ".pdf", sep=""))
ggplot(df_tmp, aes(Date, Units.Sold, colour = Store)) +
geom_line() +
ggtitle(paste("Region: ", region, sep = "")) +
theme(axis.text = element_text(size=13),
title = element_text(15),
legend.text = element_text(size=13)) +
xlab("\n Date") +
ylab("Units Sold\n")
ggsave(paste0("salesPerStore_", region, ".pdf", sep=""), width=11, height=8.5)
arnings()
warnings()
ggplot(df_tmp, aes(Date, Units.Sold, colour = Store)) +
geom_line() +
ggtitle(paste("Region: ", region, sep = "")) +
theme(axis.text = element_text(size=12),
title = element_text(14),
legend.text = element_text(size=12)) +
xlab("\n Date") +
ylab("Units Sold\n")
ggsave(paste0("salesPerStore_", region, ".pdf", sep=""), width=11, height=8.5)
wreadline()
ggplot(df_tmp, aes(Date, Units.Sold, colour = Store)) +
geom_line() +
ggtitle(paste("Region: ", region, sep = "")) +
theme(axis.text = element_text(size=12),
title = element_text(14),
legend.text = element_text(size=12)) +
xlab("\n Date") +
ylab("Units Sold\n")
ggsave(paste0("salesPerStore_", region, ".pdf", sep=""), width=11, height=8.5)
warnings()
ggplot((df_tmp, aes(Date, Units.Sold, colour = Store)) +
geom_line() +
ggtitle(paste("Region: ", region, sep = "")) +
theme(axis.text = element_text(size=13),
title = element_text(15),
legend.text = element_text(size=13)) +
xlab("\n Date") +
ylab("Units Sold\n"))
ggplot(df_tmp, aes(Date, Units.Sold, colour = Store)) +
geom_line() +
ggtitle(paste("Region: ", region, sep = "")) +
theme(axis.text = element_text(size=13),
title = element_text(15),
legend.text = element_text(size=13)) +
xlab("\n Date") +
ylab("Units Sold\n")
ggsave(paste0("salesPerStore_", region, ".pdf", sep=""), width=11, height=8.5)
ggplot(df_tmp, aes(Date, Units.Sold, colour = Store)) +
geom_line() +
xlab("\n Date") +
ylab("Units Sold\n") +
ggtitle(paste("Region: ", region, sep = "")) +
theme(axis.text = element_text(size=13),
title = element_text(15),
legend.text = element_text(size=13))
ggsave(paste0("salesPerStore_", region, ".pdf", sep=""), width=11, height=8.5)
library(magrittr)
library(scales)
ggplot(df_tmp, aes(Date, Units.Sold, colour = Store)) +
geom_line() +
xlab("\n Date") +
ylab("Units Sold\n") +
ggtitle(paste("Region: ", region, sep = "")) +
theme(axis.text = element_text(size=13),
title = element_text(15),
legend.text = element_text(size=13))
ggsave(paste0("salesPerStore_", region, ".pdf", sep=""), width=11, height=8.5)
